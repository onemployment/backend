services:
  redis:
    image: redis:8-alpine
    container_name: redis
    ports:
      - '6379:6379'
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:15.8-alpine
    container_name: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U appuser -d onemployment']
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    container_name: backend
    image: backend
    build: .
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    command: npx nodemon --exec "npx ts-node src/index.ts" --watch src --ext ts,js,json --legacy-watch --polling-interval 1000 # NOTE: polling is a temporary workaround for auto-refresh
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
